/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id("buildlogic.java-conventions")
    alias(libs.plugins.gradleup.shadow)
}

dependencies {
    api(project(path = ":alpslib-utils", configuration = "shadow"))
    api(project(":alpslib-io"))
    api(libs.com.alpsbte.canvas)
    api(libs.com.github.cryptomorin.xseries)
    api(libs.org.mariadb.jdbc.mariadb.java.client)
    api(libs.com.zaxxer.hikaricp)
    api(libs.org.apache.commons.commons.vfs2)
    api(libs.commons.net.commons.net)
    api(libs.com.github.mwiede.jsch)
    api(libs.org.jetbrains.annotations)
    api(libs.com.squareup.okhttp3.okhttp.jvm)
    compileOnly(libs.com.sk89q.worldedit.worldedit.bukkit)
    compileOnly(libs.com.arcaniax.headdatabase.api)
    compileOnly(libs.commons.io.commons.io)
    compileOnly(libs.io.papermc.paper.paper.api)
    testImplementation(libs.org.junit.jupiter.junit.jupiter.engine)
    testImplementation(libs.org.junit.platform.junit.platform.runner)
    testImplementation(libs.org.hamcrest.hamcrest)
    testCompileOnly(libs.io.papermc.paper.paper.api)
}

description = "AlpsLib-LibPlotSystemTerra"
version = "1.1.3"


publishing {
    publications {
        create<MavenPublication>("shadow") {
            from(components["shadow"])
        }
    }
}

tasks.shadowJar {
    exclude("org/slf4j/**")
    exclude("org/jetbrains/annotations/**")
    archiveClassifier = ""
}

tasks.assemble {
    dependsOn(tasks.shadowJar) // Ensure that the shadowJar task runs before the build task
}

tasks.jar {
    enabled = false // Disable the default jar task since we are using shadowJar
}